<?xml version="1.0"?>
<robot name="generic_gimbal" xmlns:xacro="http://ros.org/wiki/xacro">


    <xacro:property name="PI" value="3.1415926535897931"/>
    <xacro:property name="parte_1" value="package://gimbal_controller/urdf/meshes/gimbal_parte_1.dae"/>
    <xacro:property name="parte_2" value="package://gimbal_controller/urdf/meshes/gimbal_parte_2.dae"/>
    <xacro:property name="parte_3" value="package://gimbal_controller/urdf/meshes/gimbal_parte_3.dae"/>


<!--    <xacro:include filename="$(find_gimbal_controller)/urdf/camera.xacro"/>-->
    <xacro:include filename="$(find gimbal_controller)/urdf/component_snippets.xacro"/>


    <xacro:macro name="box_inertia" params="x y z mass">
        <inertia ixx="${0.0833333 * mass * (y*y + z*z)}"
                 ixy="0.0"
                 ixz="0.0"
                 iyy="${0.0833333 * mass * (x*x + z*z)}"
                 iyz="0.0"
                 izz="${0.0833333 * mass * (x*x + y*y)}"/>
    </xacro:macro>


    <xacro:macro name="generic_gimbal"
                 params="robot_namespace camera_suffix parent_link
                 horizontal_fov image_width image_height image_format
                 max_range visualize type mass z x">


        <joint name="${robot_namespace}/gimbal_1_joint" type="fixed">
            <axis xyz="1 0 0"/>
            <origin xyz="${x} 0 ${z}" rpy="0 0 0"/>
            <parent link="${parent_link}"/>
            <child link="${robot_namespace}/gimbal_1_link"/>
        </joint>

        <link name="${robot_namespace}/gimbal_1_link">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
                <geometry>
                    <mesh filename="${parte_1}" scale="1 1 1"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 0" rpy="0 0 ${pi/2}"/>
                <geometry>
                    <mesh filename="${parte_1}" scale="1 1 1"/>
                </geometry>
            </visual>
            <inertial>
                <mass value="1"/> <!--021-->
                <origin xyz="0 0 ${z}" rpy="0 0 0"/>
                <xacro:box_inertia x="0.7" y="0.7" z="0.7" mass="0.1"/>

            </inertial>
        </link>


        <joint name="joint_yaw" type="continuous">
            <axis xyz="0 0 1"/>
            <dynamics damping="0.01" friction="0.0"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <parent link="${robot_namespace}/gimbal_1_link"/>
            <child link="${robot_namespace}/gimbal_2_link"/>
        </joint>


        <link name="${robot_namespace}/gimbal_2_link">
            <collision>
                <origin xyz="0 0 -0.0595" rpy="0 0 0"/>
                <geometry>
                    <mesh filename="${parte_2}" scale="1 1 1"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 -0.0595" rpy="0 0 0"/>
                <geometry>
                    <mesh filename="${parte_2}" scale="1 1 1"/>
                </geometry>
            </visual>
            <inertial>
                <mass value="1"/>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <xacro:box_inertia x="0.7" y="0.7" z="0.7" mass="0.1"/>
            </inertial>
        </link>

        <joint name="joint_roll" type="continuous">
            <axis xyz="1 0 0"/>
            <dynamics damping="0.01" friction="0.0"/>
            <origin xyz="-0.048 0 -0.0595" rpy="0 0 0"/>
            <parent link="${robot_namespace}/gimbal_2_link"/>
            <child link="${robot_namespace}/gimbal_3_link"/>
        </joint>

        <link name="${robot_namespace}/gimbal_3_link">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <mesh filename="${parte_3}" scale="1 1 1"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0  0" rpy="0 0 0"/>
                <geometry>
                    <mesh filename="${parte_3}" scale="1 1 1"/>
                </geometry>
            </visual>

            <inertial>
                <mass value="0.1"/>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <xacro:box_inertia x="0.7" y="0.7" z="0.7" mass="0.1"/>
            </inertial>
        </link>

        <joint name="joint_pitch" type="continuous">
            <axis xyz="0 1 0"/>
            <dynamics damping="0.01" friction="0.0"/>
            <origin xyz="0.038 0 0" rpy="0 0 0"/>
            <parent link="${robot_namespace}/gimbal_3_link"/>
            <child link="${robot_namespace}/camera_link"/>
        </joint>

        <link name="${robot_namespace}/camera_link">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="0.03 0.03 0.03"/>
                </geometry>
            </collision>
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="0.03 0.03 0.03"/>
                </geometry>
            </visual>
            <inertial>
                <xacro:box_inertia x="0.03" y="0.03" z="0.03" mass="${mass}"/>
                <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
                <mass value="${mass}"/>
            </inertial>
        </link>


        <joint name="camera_joint" type="fixed">
            <axis xyz="0 0 0"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <parent link="${robot_namespace}/camera_link"/>
            <child link="camera_link_optical"/>
        </joint>

        <link name="camera_link_optical">
        </link>

<!--&lt;!&ndash;         ADIS16448 IMU. &ndash;&gt;-->
<!--        <xacro:imu_plugin_macro-->
<!--                namespace="${robot_namespace}"-->
<!--                imu_suffix="camera"-->
<!--                parent_link="${robot_namespace}/camera_link"-->
<!--                imu_topic="imu1"-->
<!--                mass_imu_sensor="0.015"-->
<!--                gyroscope_noise_density="0.0003394"-->
<!--                gyroscope_random_walk="0.000038785"-->
<!--                gyroscope_bias_correlation_time="1000.0"-->
<!--                gyroscope_turn_on_bias_sigma="0.0087"-->
<!--                accelerometer_noise_density="0.004"-->
<!--                accelerometer_random_walk="0.006"-->
<!--                accelerometer_bias_correlation_time="300.0"-->
<!--                accelerometer_turn_on_bias_sigma="0.1960">-->
<!--            <inertia ixx="0.000001" ixy="0.0" ixz="0.0" iyy="0.000001" iyz="0.0" izz="0.000001" />-->
<!--            <origin xyz="0 0 0" rpy="0 0 0" />-->
<!--        </xacro:imu_plugin_macro>-->




                <gazebo reference="camera_link_optical">
                    <sensor type="camera" name="camera1">
                        <update_rate>30.0</update_rate>
                        <visualize>${visualize}</visualize>

                        <camera name="${camera_suffix}">
                            <horizontal_fov>${horizontal_fov}</horizontal_fov>

                            <image>
                                <width>${image_width}</width>
                                <height>${image_height}</height>
                                <format>${image_format}</format>
                            </image>

                            <clip>
                                <near>0.02</near>
                                <far>${max_range}</far>
                            </clip>

                            <noise>
                                <type>gaussian</type>
                                <mean>0.00</mean>
                                <stddev>0.007</stddev>
                            </noise>
                        </camera>

                        <plugin name="camera_controller" filename="libgazebo_ros_camera.so"><!--filename="libgazebo_ros_openni_kinect.so">-->
<!--                            <robotNamespace>${robot_namespace}</robotNamespace>-->
                            <alwaysOn>true</alwaysOn>
                            <updateRate>0.0</updateRate>

                            <cameraName>${robot_namespace}/camera</cameraName>
                            <imageTopicName>image_raw</imageTopicName>
                            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                            <frameName>camera_link_optical</frameName>

                            <!-- setting hackBaseline to anything but 0.0 will cause a misalignment
                     between the gazebo sensor image and the frame it is supposed to
                     be attached to -->
                            <hackBaseline>0.0</hackBaseline>
                            <distortionK1>0.0</distortionK1>
                            <distortionK2>0.0</distortionK2>
                            <distortionK3>0.0</distortionK3>
                            <distortionT1>0.0</distortionT1>
                            <distortionT2>0.0</distortionT2>
                            <CxPrime>0</CxPrime>
                            <Cx>0.0</Cx>
                            <Cy>0.0</Cy>
                            <focalLength>0.0</focalLength>
                        </plugin>
                    </sensor>
                </gazebo>


        <transmission name="tran1">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="joint_yaw">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor1">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

        <transmission name="tran2">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="joint_roll">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor2">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

        <transmission name="tran3">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="joint_pitch">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="motor3">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>


        <!--         ros_control plugin -->
        <gazebo>
            <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                <robotNamespace>${robot_namespace}</robotNamespace>
                <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
                <legacyModeNS>true</legacyModeNS>
            </plugin>
        </gazebo>



    </xacro:macro>
</robot>
